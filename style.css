html,
body {
  height: 100%;
  margin: 0;
}

/* Creating start overlay */

.start-overlay.active {
  position: absolute;
  background-color: black;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.start-overlay.disabled {
  display: none;
}

.start {
  width: 300px;
  height: 200px;
  background-color: aliceblue;
  border-radius: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.start-btn {
  outline: none;
  font-size: 30px;
  padding: 10px 40px 10px 40px;
  border-radius: 20px;
  border: none;
  color: aliceblue;
  background-color: black;
  cursor: pointer;
}

/* Creating game container */

.container {
  height: 100%;
  background-color: gray;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.grid {
  width: 600px;
  height: 600px;
  background-color: aliceblue;
  /* Creating a grid of cells */
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  border: 2px solid black;
}

.cell {
  border: 2px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
}

/* Creating X and O and adding shadow X and O to show the move */

.cell.X::before,
.cell.X::after,
.grid.X .cell:not(.X):not(.O):hover::before,
.grid.X .cell:not(.X):not(.O):hover::after {
  content: "";
  width: calc(200px * 0.9 * 0.15);
  height: calc(200px * 0.9);
  background-color: black;
  position: absolute;
}

.cell.X::before,
.grid.X .cell:not(.X):not(.O):hover::before {
  transform: rotate(45deg);
}

.cell.X::after,
.grid.X .cell:not(.X):not(.O):hover::after {
  transform: rotate(-45deg);
}

.cell.O::before,
.cell.O::after,
.grid.O .cell:not(.X):not(.O):hover::before,
.grid.O .cell:not(.X):not(.O):hover::after {
  content: "";
  position: absolute;
  border-radius: 50%;
}

.cell.O::before,
.grid.O .cell:not(.X):not(.O):hover::before {
  width: calc(200px * 0.75);
  height: calc(200px * 0.75);
  background-color: black;
}

.cell.O::after,
.grid.O .cell:not(.X):not(.O):hover::after {
  width: calc(200px * 0.55);
  height: calc(200px * 0.55);
  background-color: aliceblue;
}

.grid.X .cell:not(.X):not(.O):hover::before,
.grid.X .cell:not(.X):not(.O):hover::after {
  background-color: lightslategray;
}

.grid.O .cell:not(.X):not(.O):hover::before {
  background-color: lightslategray;
}

/* Creating end overlay */

.end-overlay.active {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.2);
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.end-overlay.disabled {
  display: none;
}

.end {
  width: 300px;
  height: 200px;
  background-color: aliceblue;
  border-radius: 20px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.restart-btn {
  outline: none;
  font-size: 30px;
  padding: 10px 40px 10px 40px;
  border-radius: 20px;
  border: none;
  color: aliceblue;
  background-color: black;
  cursor: pointer;
}
